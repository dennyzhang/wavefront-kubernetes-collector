apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: wavefront-proxy
    name: wavefront-proxy
  name: wavefront-proxy
  namespace: pks-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: wavefront-proxy
  template:
    metadata:
      labels:
        k8s-app: wavefront-proxy
    spec:
      serviceAccountName: wavefront-collector
      containers:
      - name: wavefront-proxy
        # TODO: change this
        image: wavefronthq/proxy:latest
        imagePullPolicy: Always
        env:
        - name: WAVEFRONT_URL
          value: https://try.wavefront.com/api/
        - name: WAVEFRONT_TOKEN
          valueFrom:
            secretKeyRef:
              name: wavefront-secret
              key: wavefront-token
        ports:
        - containerPort: 2878
          protocol: TCP
        securityContext:
          privileged: false
---
apiVersion: v1
kind: Service
metadata:
  name: wavefront-proxy
  namespace: pks-system
  labels:
    k8s-app: wavefront-proxy
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
  - name: http-metrics
    port: 2878
    targetPort: 2878
    protocol: TCP
  selector:
    k8s-app: wavefront-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: wavefront-collector
    name: wavefront-collector
  name: wavefront-collector
  namespace: pks-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: wavefront-collector
  template:
    metadata:
      labels:
        k8s-app: wavefront-collector
    spec:
      serviceAccountName: wavefront-collector
      containers:
      - name: wavefront-collector
        image: wavefronthq/wavefront-kubernetes-collector:0.9.6
        imagePullPolicy: Always
        command:
        - /wavefront-collector
        - --source=kubernetes.summary_api:''
        - --source=prometheus:''?url=http://kube-state-metrics.pks-system.svc.cluster.local:8080/metrics&prefix=pks.heapster.
        - --sink=wavefront:?proxyAddress=wavefront-proxy.pks-system.svc.cluster.local:2878&clusterName=sophia-test&includeLabels=true
        - --v=2
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
      volumes:
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
